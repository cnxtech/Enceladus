@import '../definitions/variables.pcss';
@import './common.pcss';

/**
 * TODO rewrite the entire layout parts when subgrid is released
 */

:host {
  contain: content;

  display: grid;
  grid: auto-flow min-content / repeat(2, max-content) 1fr;
  gap: 0.4rem 1rem;
}

header {
  position: sticky;
  inset-block-start: 0;
  background-color: gray(0);

  grid-column: 1 / -1;
}

[role='columnheader'] {
  display: inline-block;

  &:nth-of-type(2) {
    /*
    we need to approximate the column width,
    as we're unable to determine the widths of the columns below
    */
    margin-inline: 2rem;
  }
}

h1 {
  grid-column: 1 / -1;

  font-size: 1.7rem;
  letter-spacing: +0.15ch;
  padding-block-end: 0.3ex;
  margin: 0;
  font-weight: 400;

  &::after {
    content: '';
    display: inline-block;
    vertical-align: text-middle;

    /* needs to be shifted up slightly to actually center it */
    position: relative;
    inset-block-start: -3px;

    size: 0.5rem;
    corner-radius: 50%;

    background-color: $theme-color;
    animation: pulse 800ms ease-in-out infinite alternate;
    margin-inline-start: 0.8ch;

    @media (prefers-reduced-motion) {
      display: none;
    }
  }
}

[role='row'] {
  display: contents;

  @nest header & > * {
    font-variation-settings: 'wght' 600;
    padding-block-end: 0.5ex;
  }

  @nest header ~ &:last-child > * {
    padding-block-end: 2rem;
  }
}

.tnum {
  font-feature-settings: 'tnum';
}

p {
  line-height: 1.3;
  margin: 0;

  &:not(:first-of-type) {
    margin-block-start: 0.6rem;
  }
}

@keyframes pulse {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
